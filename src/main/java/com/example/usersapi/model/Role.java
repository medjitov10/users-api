package com.example.usersapi.model;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import java.util.List;


/**
 * Role entity to represent roles in our data model. A role has a name.
 * General users will have a role of User. Roles will be used to determine who is authorized to use certain functionalities on the site.
 * We'll be able to perform CRUD operations on the roles table. {@link com.example.usersapi.repository.RoleRepository}
 *
 * @author David
 * @author Osman
 *
 * create table in postgres named roles
 */
@Entity
@Table(name="roles")
public class Role {
    /**
     * @param id - autogenerated value by hibernate
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column
    private long id;

    /**
     * @param name - make it unique and un-nullable
     */
    @NotBlank(message = "Username cannot be blank")
    @Column(unique = true, nullable = false)
    private String name;

    /**
     * @param users to map a many to many relationship between user and roles
     */
    @ManyToMany(mappedBy = "roles")
    List<User> users;

    /**
     * getters and setters
     */
    public List<User> getUsers() {
        return users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }

    public Role() {
    }

    public Role(String name) {
        this.name = name;
    }
    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
